import { exec, ARGV, getStatements } from "./shared";

import fs from "fs/promises";

async function getTeXMeta(fname: string) {
  const res = (await fs.readFile(`statements/${fname}.tex`)).toString();
  const tokens = res.split("\n");
  const target = tokens.find((line) => line.includes("\\usepackage{res/"));

  let lang = undefined;

  if (target?.includes("en")) lang = "EN";
  else if (target?.includes("th")) lang = "TH";

  const title = tokens
    .find((line) => line.includes("\\begin{problem}"))
    ?.split("}")[1]
    ?.slice(1);

  if (!(title && lang)) {
    throw "Title or Lang is undefined";
  }

  return {
    title,
    lang,
  };
}

export default async function web() {
  await exec("mkdir -p dist-web");
  await exec("cp web/* dist-web");

  const statements = await getStatements();

  let targetString =
    "/* questions object is auto-generated by scripts/web.ts */";

  for (const fname of statements) {
    const { title, lang } = await getTeXMeta(fname);
    targetString += `\n  ${fname}: "${title} [${lang}]",`;
  }

  const script = (await fs.readFile("dist-web/script.js")).toString();
  await fs.writeFile(
    "dist-web/script.js",
    script.replace("/// <Questions />", targetString)
  );

  process.exit(0);
}
